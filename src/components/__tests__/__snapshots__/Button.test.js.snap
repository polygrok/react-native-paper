// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders button with an accessibility hint 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityHint="hint"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Button with accessibility hint
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders button with an accessibility label 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityLabel="label"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Button with accessibility label
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders button with color 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#e91e63",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Custom Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders button with custom testID 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
    testID="custom:testID"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Button with custom testID
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders button with icon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "marginLeft": 12,
            "marginRight": -4,
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#6200ee",
                "fontSize": 16,
              },
            ]
          }
        >
          □
        </Text>
      </View>
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Icon Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders button with icon in reverse order 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          Object {
            "flexDirection": "row-reverse",
          },
        ]
      }
    >
      <View
        style={
          Object {
            "marginLeft": -4,
            "marginRight": 12,
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "#6200ee",
                "fontSize": 16,
              },
            ]
          }
        >
          □
        </Text>
      </View>
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Right Icon
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders contained contained with mode 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#6200ee",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 2,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0.75,
        "width": 0,
      },
      "shadowOpacity": 0.24,
      "shadowRadius": 1.5,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#ffffff",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Contained Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders disabled button 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "rgba(0, 0, 0, 0.32)",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Disabled Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders loading button 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <ActivityIndicator
        animating={true}
        color="#6200ee"
        hidesWhenStopped={true}
        size="small"
        style={
          Object {
            "marginLeft": 12,
            "marginRight": -4,
          }
        }
      />
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Loading Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders outlined button with mode 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "rgba(0, 0, 0, 0.29)",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0.5,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Outlined Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders text button by default 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Text Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders text button with mode 1`] = `
<View
  style={
    Object {
      "backgroundColor": "transparent",
      "borderColor": "transparent",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "elevation": 0,
      "minWidth": 64,
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "letterSpacing": 1,
                "marginHorizontal": 16,
                "marginVertical": 9,
                "textAlign": "center",
              },
              undefined,
              Object {
                "textTransform": "uppercase",
              },
              Object {
                "color": "#6200ee",
                "fontFamily": "System",
                "fontWeight": "500",
              },
              Object {
                "fontFamily": "System",
                "fontWeight": "500",
              },
              undefined,
            ],
          ]
        }
      >
        Text Button
      </Text>
    </View>
  </View>
</View>
`;
